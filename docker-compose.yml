version: "3.8"

services:
    # image project (app Laravel)
    app:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
            - ./docker/php-fpm.ini:/etc/php/7.4/fpm/conf.d/99-custom.ini
        depends_on:
            - redis
            - db
        networks:
            - curso-celke

    # nginx
    nginx:
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - "8989:80"
        volumes:
            - ./:/var/www
            - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./docker/nginx/:/etc/nginx/conf.d/
        depends_on:
            - redis
            - db
        networks:
            - curso-celke

    # db mysql
    db:
        image: mysql:5.7.22
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE:-laravel}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
            MYSQL_PASSWORD: ${DB_PASSWORD:-userpass}
            MYSQL_USER: ${DB_USERNAME:-username}
        volumes:
            - ./.docker/mysql/dbdata:/var/lib/mysql
        ports:
            - "3388:3306"
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 30s
            retries: 5
            start_period: 10s
            timeout: 5s
        networks:
            - curso-celke

    # PHPMyAdmin
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        restart: unless-stopped
        ports:
            - "8080:80"
        environment:
            PMA_HOST: db
            PMA_PORT: 3306
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-userpass}
        depends_on:
            - db
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost"]
            interval: 30s
            retries: 3
            start_period: 5s
            timeout: 5s
        networks:
            - curso-celke

    # redis
    redis:
        image: redis:7.4.2
        restart: always
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 30s
            retries: 3
            start_period: 5s
            timeout: 5s
        ports:
            - "6379:6379"
        networks:
            - curso-celke

networks:
    curso-celke:
        driver: bridge
